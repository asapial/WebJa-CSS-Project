

### Definition

The `align-content` CSS property aligns a flex container's lines within the flex container when there is extra space on the cross-axis, similar to how `justify-content` aligns individual items within the main-axis.

### Values

| Value | Description |
| --- | --- |
| `flex-start` | Lines are packed toward the start of the flex container's cross-axis. |
| `flex-end` | Lines are packed toward the end of the flex container's cross-axis. |
| `center` | Lines are packed toward the center of the flex container's cross-axis. |
| `space-between` | Lines are evenly distributed in the flex container along the cross-axis with the first line at the start and the last line at the end. |
| `space-around` | Lines are evenly distributed in the flex container along the cross-axis with equal space around them. |
| `space-evenly` | Lines are evenly distributed with equal space between them. |
| `stretch` | Lines stretch to take up the remaining space. |

### Example
```css
    .container {
        display: flex;
        flex-wrap: wrap;
        height: 200px;
        align-content: center; /* center */
        /* align-content: flex-start; */  /* flex-start */
        /* align-content: flex-end; */    /* flex-end */
        /* align-content: space-between; */  /* space-between */
        /* align-content: space-around; */   /* space-around */
        /* align-content: space-evenly; */   /* space-evenly */
        /* align-content: stretch; */        /* stretch */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
        border-radius: 10px;
        background-color: #fff;
    }
    
    .item {
        width: 100px;
        height: 100px;
        margin: 10px;
        background-color: #f3f3f3;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 5px;
    }
```   

### Description

The `align-content` property is used when the flex container has more than one line and controls how these lines are distributed within the container. It applies only to multi-line flex containers (i.e., containers with `flex-wrap: wrap` or `flex-wrap: wrap-reverse`). It has no effect on single-line flex containers.

### All Most Similar Properties

| Property | Description | Difference |
| --- | --- | --- |
| `align-items` | Aligns flex items along the cross-axis of the flex container. | `align-items` affects the alignment of items within a single flex line, while `align-content` aligns the flex lines themselves within the container. |
| `justify-content` | Aligns flex items along the main-axis of the flex container. | `justify-content` distributes items within a single line along the main axis, whereas `align-content` distributes lines along the cross-axis. |
| `align-self` | Allows the default alignment (or the one specified by `align-items`) to be overridden for individual flex items. | `align-self` is applied to individual flex items, allowing for different alignments within the same container, while `align-content` applies to flex lines. |

### Browser Compatibility

| Browser | Support |
| --- | --- |
| Google Chrome | Yes |
| Mozilla Firefox | Yes |
| Microsoft Edge | Yes |
| Safari | Yes |
| Opera | Yes |
| Internet Explorer | No  |

### Example Code
```html
  <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            background-color: #f0f0f0;
            font-family: Arial, sans-serif;
            padding: 10px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            margin: 0;
        }

        .container {
            width:50vw;
            display: flex;
            flex-wrap: wrap;
            height: 50vw; 
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 2vw; 
            border-radius: 1vw;
            margin: 2vw 0; 
            background-color: #fff;
        }

        .item {
            width: 10vw; 
            height: 10vw; 
            margin: 1vw; 
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 0.5vw;
            color: #fff;
        }

        .flex-start { align-content: flex-start; }
        .flex-end { align-content: flex-end; }
        .center { align-content: center; }
        .space-between { align-content: space-between; }
        .space-around { align-content: space-around; }
        .space-evenly { align-content: space-evenly; }
        .stretch { align-content: stretch; }

        .item-1 { background-color: #ff6f61; }
        .item-2 { background-color: #6b5b95; }
        .item-3 { background-color: #88b04b; }
        .item-4 { background-color: #f7cac9; }
        .item-5 { background-color: #92a8d1; }
        .item-6 { background-color: #955251; }
    </style>
    <title>Align Content Example</title>
</head>
<body>
    <div>
        <h1>align-content: flex-start</h1>
        <div class="container flex-start">
            <div class="item item-1">1</div>
            <div class="item item-2">2</div>
            <div class="item item-3">3</div>
            <div class="item item-4">4</div>
            <div class="item item-5">5</div>
            <div class="item item-6">6</div>
        </div>

        <h1>align-content: flex-end</h1>
        <div class="container flex-end">
            <div class="item item-1">1</div>
            <div class="item item-2">2</div>
            <div class="item item-3">3</div>
            <div class="item item-4">4</div>
            <div class="item item-5">5</div>
            <div class="item item-6">6</div>
        </div>

        <h1>align-content: center</h1>
        <div class="container center">
            <div class="item item-1">1</div>
            <div class="item item-2">2</div>
            <div class="item item-3">3</div>
            <div class="item item-4">4</div>
            <div class="item item-5">5</div>
            <div class="item item-6">6</div>
        </div>

        <h1>align-content: space-between</h1>
        <div class="container space-between">
            <div class="item item-1">1</div>
            <div class="item item-2">2</div>
            <div class="item item-3">3</div>
            <div class="item item-4">4</div>
            <div class="item item-5">5</div>
            <div class="item item-6">6</div>
        </div>

        <h1>align-content: space-around</h1>
        <div class="container space-around">
            <div class="item item-1">1</div>
            <div class="item item-2">2</div>
            <div class="item item-3">3</div>
            <div class="item item-4">4</div>
            <div class="item item-5">5</div>
            <div class="item item-6">6</div>
        </div>

        <h1>align-content: space-evenly</h1>
        <div class="container space-evenly">
            <div class="item item-1">1</div>
            <div class="item item-2">2</div>
            <div class="item item-3">3</div>
            <div class="item item-4">4</div>
            <div class="item item-5">5</div>
            <div class="item item-6">6</div>
        </div>

        <h1>align-content: stretch</h1>
        <div class="container stretch">
            <div class="item item-1">1</div>
            <div class="item item-2">2</div>
            <div class="item item-3">3</div>
            <div class="item item-4">4</div>
            <div class="item item-5">5</div>
            <div class="item item-6">6</div>
        </div>
    </div>
</body>
</html>

```