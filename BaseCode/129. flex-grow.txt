### Definition
The `flex-grow` CSS property specifies how much a flex item will grow relative to the rest of the flex items inside the same container. When used, it enables the flex item to take up additional space when necessary.

### Values
| Value      | Description                                                        |
|------------|--------------------------------------------------------------------|
| `0`        | The item will not grow, even if there is space available.          |
| `<number>` | A number greater than `0` that specifies the item's growing factor. |
| `initial`  | Sets the property to its default value `0`.                        |
| `inherit`  | Inherits the property from its parent element.                     |

### Example
```css
/* No growth */
.item {
    flex-grow: 0; /* Item will not grow */
}

/* Equal growth */
.item {
    flex-grow: 1; /* Item will grow equally */
}

/* Double growth */
.item {
    flex-grow: 2; /* Item will grow twice as much as other items */
}

/* Triple growth */
.item {
    flex-grow: 3; /* Item will grow three times as much as other items */
}
```

### Description
The `flex-grow` property is part of the flexible box layout module. It determines how a flex item will grow relative to the other items inside the same flex container when extra space is available. If all items have the same `flex-grow` value, they will grow at the same rate. If one item has a higher `flex-grow` value, it will take up more space compared to the other items.

### All Most Similar Properties
| Property      | Description                                  | Difference                                                                                     |
|---------------|----------------------------------------------|------------------------------------------------------------------------------------------------|
| `flex-shrink` | Specifies how a flex item will shrink.       | `flex-shrink` determines how items shrink when space is insufficient, while `flex-grow` determines growth when space is available. |
| `flex-basis`  | Specifies the initial main size of a flex item. | `flex-basis` sets the initial size of the item before growing or shrinking, while `flex-grow` controls growth.                   |
| `flex`        | Shorthand for `flex-grow`, `flex-shrink`, and `flex-basis`. | The `flex` property is a shorthand for setting all three properties at once.                  |

### Browser Compatibility
| Browser            | Supported Versions |
|--------------------|--------------------|
| Chrome             | Yes                |
| Firefox            | Yes                |
| Safari             | Yes                |
| Edge               | Yes                |
| Internet Explorer  | 11+                |

### In JavaScript
```javascript
// Set flex-grow property using JavaScript
document.querySelector('.item').style.flexGrow = '2';
```

### Example Code
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f8f8f8;
            margin: 0;
        }
        .main-container {
            background-color: #fff;
            border-radius: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            width: 80%;
            padding: 20px;
            text-align: center;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .sub-container {
            width: 80%;
            margin: 10px auto;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.555);
            border-radius: 20px;
            background-color: #dcdbdb;
            display: flex;
            margin-bottom: 30px;
        }
        .box {
            height: 50px;
            background-color: #4CAF50;
            margin: 10px;
            border-radius: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
            color: white;
            font-size: 1em;
        }
    </style>
</head>
<body>
    <div class="main-container">
        <h1>flex-grow Property Values</h1>

        <div class="sub-container" style="display: flex;">
            <h2>flex-grow: 0</h2>
            <div class="box" style="flex-grow: 0; width: 50px;">1</div>
            <div class="box" style="flex-grow: 0; width: 50px;">2</div>
            <div class="box" style="flex-grow: 0; width: 50px;">3</div>
        </div>

        <div class="sub-container" style="display: flex;">
            <h2>flex-grow: 1</h2>
            <div class="box" style="flex-grow: 1;">1</div>
            <div class="box" style="flex-grow: 1;">2</div>
            <div class="box" style="flex-grow: 1;">3</div>
        </div>

        <div class="sub-container" style="display: flex;">
            <h2>flex-grow: 2</h2>
            <div class="box" style="flex-grow: 1;">1</div>
            <div class="box" style="flex-grow: 2;">2</div>
            <div class="box" style="flex-grow: 1;">3</div>
        </div>

        <div class="sub-container" style="display: flex;">
            <h2>flex-grow: 3</h2>
            <div class="box" style="flex-grow: 1;">1</div>
            <div class="box" style="flex-grow: 3;">2</div>
            <div class="box" style="flex-grow: 1;">3</div>
        </div>

    </div>
</body>
</html>
```